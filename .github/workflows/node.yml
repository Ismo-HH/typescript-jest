# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: Build TypeScript
      run: npx tsc
    - name: Create report directory
      run: mkdir -p reports
    - name: Run tests
      id: jest-tests
      run: |
        npm test -- --reporters=default --reporters=jest-junit
        if reports/jest-junit.xml; then
          echo "::set-output name=TESTS_RESULTS::tests-found"
        else
          echo "::set-output name=TESTS_RESULTS::no-tests"
        fi
    - name: Publish Test Report
      uses: dorny/test-reporter@v1
      with:
        name: jest-tests
        path: reports/jest-junit.xml
        reporter: jest-junit
    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ github.run_id }}-npm-${{ matrix.node-version }}
        path: reports/jest-junit.xml
    - name: autograde-1
      run: |
        runid=${{ github.run_id }}
        SUM=$((runid))
        echo "runid on $SUM"
    - name: autograde-2
      run: |
        secret=${{ secrets.GH_ACTIONS_EVALUATION }}
        SUM=$((secret))
        echo "secret on $SUM"
    - name: run autograding tests
      uses: classroom-resources/autograding-grading-reporter@v1
      with:
        runners: ${{ env.TESTS_RESULTS }}
      env:
        TESTS_RESULTS: ${{ env.TESTS_RESULTS }}

#      run: |
#        runid=${{ github.run_id }}
#        secret=${{ secrets.GH_ACTIONS_EVALUATION }}
#        SUM=$((runid + secret))
#        echo "Summa on $SUM"
