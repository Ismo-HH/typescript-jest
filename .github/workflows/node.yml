# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Asenna riippuvuudet
        run: npm install
      - name: Käännä TypeScript
        run: npx tsc
      - name: Lataa build-artifakti
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: build/

  test:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Hae build-artifakti
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: build/
      - name: Run tests
        run: npm test
      - name: Luo raporttihakemisto
        run: mkdir -p reports
      - name: Upload test results
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ github.run_id }}
          path: reports/jest-junit.xml

  report:
    runs-on: ubuntu-latest
    needs: build
    name: Report
    if: always()
    steps:
      - name: list artifactit
        run: ls -la reports

      - name: Download test results
        uses: actions/download-artifact@v4
        with:
          name: test-results

      - name: Publish Test Report
        uses: dorny/test-reporter@v1
        with:
          name: Jest Tests
          path: jest-junit.xml
          reporter: jest-junit

